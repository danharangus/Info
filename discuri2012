#include <iostream>
#include <fstream>
#include <set>
#include <vector>
#include <bitset>
#include <cstring>
using namespace std;

ifstream fin("discuri.in");
ofstream fout("discuri.out");

set<int>s[1001];
bitset<1001>b[1001];
bitset<1001>vizitat;
short dir[1001];
int n;


void DFS(short k)
{
    vizitat[k] = 1;
    for(int i=1; i<=n; i++)
    {
        if(b[k][i] && !vizitat[i])
        {
            dir[i] = -dir[k];
            DFS(i);
        }
    }
}
int main()
{
    int m,d,f,i,x,y;
    fin>>n>>m;
    for(i=1; i<n; i++)
    {
        fin>>x>>y;
        s[x].insert(y);
        s[y].insert(x);
        b[x][y] = b[y][x] = 1;
    }
    int maxim=0, crt=0;
    for(i=1; i<=n; i++)
    {
        memset(dir, 0, sizeof(dir));
        crt=0;
        dir[i]=1;
        DFS(i);
        for(int j=1; j<=n; j++)
        {
            crt+=(dir[j]==1);
        }
        if(crt>maxim)
        {
            maxim=crt;
        }
    }
    cout<<maxim;
}
